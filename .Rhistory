proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
setwd("/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/")
proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_allinfo_hor.csv",sep="\t",header=T)
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_allinfo_hor.csv",sep="\t",header=T)
View(horizonte)
horizonte$portions <- c(horizonte$T,horizonte$U,horizonte$fS,horizonte$S-horizonte$fS)
horizonte$portions <- try(c(horizonte$T,horizonte$U,horizonte$fS,horizonte$S-horizonte$fS))
names(horizonte)
for (i in names(horizonte[c(3,4,6,10,22,23,24,25,26)])){
horizonte[[i]] <- as.numeric(horizonte[[i]])
}
horizonte$portions <- try(c(horizonte$T,horizonte$U,horizonte$fS,horizonte$S-horizonte$fS))
horizonte$SohnefS <- horizonte$S - horizonte$fS
require(RCurl)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
View(schluff_oe)
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- try(schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2)))
View(horizonte)
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- apply(horizonte,schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2)))
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2)))
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2)))
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
View(schluff_oe)
schluff_oe(portions=c(horizonte$T[1],horizonte$U[1],horizonte$fS[1], horizonte$SohnefS[1]),breaks=c(0.002,0.05,0.1,2))
schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
for (i in nrow(horizonte)){
schluff_oe(portions=c(horizonte$T[1],horizonte$U[1],horizonte$fS[1], horizonte$SohnefS[1]),breaks=c(0.002,0.05,0.1,2))
}
for (i in nrow(horizonte)){
print(schluff_oe(portions=c(horizonte$T[1],horizonte$U[1],horizonte$fS[1], horizonte$SohnefS[1]),breaks=c(0.002,0.05,0.1,2)))
}
for (i in nrow(horizonte)){
print(schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2)))
}
for (i in nrow(horizonte)){
print(schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2)))
}
nrow(horizonte)
for (i in nrow(horizonte)){
schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
}
for (i in nrow(horizonte)){
print(i)
schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
}
for (i in 1:nrow(horizonte)){
print(i)
schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
}
i=1
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
result
textur_oe(t=result[1],u=result[2])
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horiztone$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
View(horizonte)
for (i in 1:nrow(horizonte)){
print(i)
try(
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3])
}
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_hor_texturberechnung.csv",sep="\t",header=T)
for (i in 1:nrow(horizonte)){
print(i)
result <- try(schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2)))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
require(RCurl)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
setwd("/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/")
proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_hor_texturberechnung.csv",sep="\t",header=T)
for (i in names(horizonte[c(3,4,6,10,22,23,24,25,26)])){
horizonte[[i]] <- as.numeric(horizonte[[i]])
}
horizonte$SohnefS <- horizonte$S - horizonte$fS
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
require(RCurl)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
setwd("/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/")
proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_hor_texturberechnung.csv",sep="\t",header=T)
for (i in names(horizonte[c(3,4,6,10,22,23,24,25,26)])){
horizonte[[i]] <- as.numeric(horizonte[[i]])
}
horizonte$SohnefS <- horizonte$S - horizonte$fS
horizonte$textur <- schluff_oe(portions=c(horizonte$T,horizonte$U,horizonte$fS, horizonte$SohnefS),breaks=c(0.002,0.05,0.1,2))
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
i=89
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
result
horizonte$textur <- textur_oe(t=result[1],u=result[2])
textur_oe(t=result[1],u=result[2])
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff[i] <- result[2]
horizonte$sand[i] <- result[3]
}
textur_oe(t=result[1],u=result[2])
View(textur_oe)
i
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
result
t=result[1]
u=result[2]
t
u
bodentyp <-character()
if(u >= 75) {
bodentyp <- "U - Schluff"
} else if(t >= 25 && t < 45 && u >= 55 && u < 75){
bodentyp <- "uL - schluffiger Lehm"
}  else if(t >= 15 && t < 25 && u >= 55 && u < 75){
bodentyp <- "lU - lehmiger Schluff"
} else if(t >= 0 && t < 15 && u >= 55 && u < 75){
bodentyp <- "sU - sandiger Schluff"
} else if(t >= 0 && t < 5 && u >= 30 && u < 55){
bodentyp <- "uS - schluffiger Sand"
} else if(t >= 0 && t < 5 && u >= 0 && u < 30){
bodentype <- "S - Sand"
} else if(t >= 5 && t < 10 && u >= 0 && u < 10){
bodentyp <-   "S - Sand"
} else if(t >= 5 && t < 15 && u >= 15 && u < 55){
bodentyp <-   "lS - lehmiger Sand"
} else if(t >= 10 && t < 15 && u >= 10 && u < 15){
bodentyp <-   "lS - lehmiger Sand"
} else if(t >= 15 && t < 25 && u >= 10 && u < 55){
bodentyp <-   "sL - sandiger Lehm"
} else if(t >= 10 && t < 25 && u >= 0 && u < 10){
bodentyp <-   "tS - toniger Sand"
} else if(t >= 25 && t < 40 && u >= 10 && u < 55){
bodentyp <-   "L - Lehm"
}else if(t >= 25 && t < 40 && u >= 10 && u < 55){
bodentyp <-   "sT - sandiger Ton"
}else if(t >= 40 && t < 50 && u >= 0 && u < 55){
bodentyp <-   "lT - lehmiger Ton"
}else if(t >= 50 && t <= 100 && u >= 0 && u < 50){
bodentyp <-   "T - Ton"
}else if(t >= 5 && t <= (20-u) && u >= 10 && u < (-1*t+20)){
bodentyp <-   "S - Sand"
}else if(t >= (20-u) && t <= 10 && u >= (-1*t+20) && u < 15 ){
bodentyp <-   "lS - lehmiger Sand"
} else {bodentyp <- NA}
bodentyp
if(u >= 75) {
bodentyp <- "U - Schluff"
} else if(t >= 25 && t < 45 && u >= 55 && u < 75){
bodentyp <- "uL - schluffiger Lehm"
}  else if(t >= 15 && t < 25 && u >= 55 && u < 75){
bodentyp <- "lU - lehmiger Schluff"
} else if(t >= 0 && t < 15 && u >= 55 && u < 75){
bodentyp <- "sU - sandiger Schluff"
} else if(t >= 0 && t < 5 && u >= 30 && u < 55){
bodentyp <- "uS - schluffiger Sand"
} else if(t >= 0 && t < 5 && u >= 0 && u < 30){
bodentype <- "S - Sand"
} else if(t >= 5 && t < 10 && u >= 0 && u < 10){
bodentyp <-   "S - Sand"
} else if(t >= 5 && t < 15 && u >= 15 && u < 55){
bodentyp <-   "lS - lehmiger Sand"
} else if(t >= 10 && t < 15 && u >= 10 && u < 15){
bodentyp <-   "lS - lehmiger Sand"
} else if(t >= 15 && t < 25 && u >= 10 && u < 55){
bodentyp <-   "sL - sandiger Lehm"
} else if(t >= 10 && t < 25 && u >= 0 && u < 10){
bodentyp <-   "tS - toniger Sand"
} else if(t >= 25 && t < 40 && u >= 10 && u < 55){
bodentyp <-   "L - Lehm"
}else if(t >= 25 && t < 40 && u >= 10 && u < 55){
bodentyp <-   "sT - sandiger Ton"
}else if(t >= 40 && t < 50 && u >= 0 && u < 55){
bodentyp <-   "lT - lehmiger Ton"
}else if(t >= 50 && t <= 100 && u >= 0 && u < 50){
bodentyp <-   "T - Ton"
}else if(t >= 5 && t <= (20-u) && u >= 10 && u < (-1*t+20)){
bodentyp <-   "S - Sand"
}else if(t >= (20-u) && t <= 10 && u >= (-1*t+20) && u < 15 ){
bodentyp <-   "lS - lehmiger Sand"
} else {bodentyp <- NA}
bodentyp
t
u
if(t >= 0 && t < 5 && u >= 0 && u < 30){
bodentype <- "S - Sand"
)
if(t >= 0 && t < 5 && u >= 0 && u < 30){
bodentype <- "S - Sand"}
bodentyp
names(horizonte)
View(horizonte)
View(schluff_oe)
portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i])
breaks=c(0.002,0.05,0.1,2)
breakslog <- log10(breaks)
y=summenlinie(portions)
y
e
myspline <- spline(breakslog,y,xout=c(seq(from=range(breakslog)[1],
to=range(breakslog)[2],
length.out = 10),
log10(0.063)))
myspline
par(mfcol=c(1,2))
plot(x=breakslog,y=y,type = "b",ylim=c(0,100))
lines(myspline$x,myspline$y,col="blue")
plot(x=breaks,y=y,type="b")
lines(x=10^myspline$x[1:10],y=myspline$y[1:10],col="blue")
splinedf <- as.data.frame(myspline)
u <- round(splinedf[11,]$y -portions[1])
t=portions[1]
s=100-t-u
textur <- c(t,u,s)
xout=c(seq(from=range(breakslog)[1],
to=range(breakslog)[2],
length.out = 10),
log10(0.063)
)
xout
order(xout)
xout=c(seq(from=range(breakslog)[1],
to=range(breakslog)[2],
length.out = 10),
log10(0.063)))
xout=c(seq(from=range(breakslog)[1],
to=range(breakslog)[2],
length.out = 10),
log10(0.063))
require(RCurl)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
setwd("/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/")
proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_hor_texturberechnung.csv",sep="\t",header=T)
for (i in names(horizonte[c(3,4,6,10,22,23,24,25,26)])){
horizonte[[i]] <- as.numeric(horizonte[[i]])
}
horizonte$SohnefS <- horizonte$S - horizonte$fS
for (i in 1:nrow(horizonte)){
print(horizonte$profilnummer[i])
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff <- result[2]
horizonte$sand <- result[3]
}
write.table(horizonte,"./data/thalheimerhorizontemittextur.txt",sep="\t")
write.table(horizonte,"./data/results_NOV2017/thalheimertest/thalheimerhorizontemittextur.txt",sep="\t")
write.table(horizonte,"./data/results_NOV2017/thalheimertest/thalheimerhorizontemittextur.txt",sep="\t",row.names=F)
View(horizonte)
require(RCurl)
myfunctions <- getURL("https://raw.githubusercontent.com/fernstgruber/Rstuff/master/fabiansandrossitersfunctions.R", ssl.verifypeer = FALSE)
eval(parse(text = myfunctions))
setwd("/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/")
proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
horizonte<- read.table("./data/results_NOV2017/thalheimertest/Thalheimerseppprofile_hor_texturberechnung.csv",sep="\t",header=T)
for (i in names(horizonte[c(3,4,6,10,22,23,24,25,26)])){
horizonte[[i]] <- as.numeric(horizonte[[i]])
}
horizonte$SohnefS <- horizonte$S - horizonte$fS
for (i in 1:nrow(horizonte)){
print(i)
result <- schluff_oe(portions=c(horizonte$T[i],horizonte$U[i],horizonte$fS[i], horizonte$SohnefS[i]),breaks=c(0.002,0.05,0.1,2))
horizonte$textur[i] <- textur_oe(t=result[1],u=result[2])
horizonte$ton[i] <- result[1]
horizonte$schluff[i] <- result[2]
horizonte$sand[i] <- result[3]
}
write.table(horizonte,"./data/results_NOV2017/thalheimertest/thalheimerhorizontemittextur.txt",sep="\t",row.names=F)
