ST_mapsets
ST_mapsets= list.dirs(paste(gisDbase,"/",ST,sep=""),recursive = F,full.names = F)
initGRASS(gisBase = gisBase,gisDbase = gisDbase,location=location,mapset=mapset,override = TRUE)
require(e1071)
require(rgdal)
require(rgrass7)
initGRASS(gisBase = gisBase,gisDbase = gisDbase,location=location,mapset=mapset,override = TRUE)
require(rgrass7)
initGRASS(gisBase = gisBase,gisDbase = gisDbase,location=location,mapset=mapset,override = TRUE)
gisBase="/usr/local/src/grass70_release/dist.x86_64-unknown-linux-gnu"
gisDbase =  "/media/fabs/Volume/Data/GRASSDATA/"
initGRASS(gisBase = gisBase,gisDbase = gisDbase,location=location,mapset=mapset,override = TRUE)
location="EPPAN_vhr"
mapset="PERMANENT"
initGRASS(gisBase = gisBase,gisDbase = gisDbase,location=location,mapset=mapset,override = TRUE)
paste("predict_",dependent,sep="")
load('./data/dependentlists.RData')
load(file="./data/modeldata/predictorlists_SVM_localandgeomtop2.RData")
dependent=dependentlist[1]
execGRASS("g.mapset",flags=S("c"), paste("predict_",dependent,sep="") )
execGRASS("g.mapset",flags=c("c"), paste("predict_",dependent,sep="") )
execGRASS("g.mapset",flags=c("c"), mapset=paste("predict_",dependent,sep="") )
EPPAN_mapset= list.dirs(paste(gisDbase,"/",location,sep=""))
EPPAN_mapset= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
EPPAN_mapset= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'misc',sep=""))
ms=ST_mapsets[1]
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'misc',sep=""))
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
for(ms in ST_mapsets)
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allreast_ST <- c(allrast_ST,vects)
}
###
for(ms in ST_mapsets){}
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allreast_ST <- c(allrast_ST,vects)
}
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allreast_ST <- c(allrast_ST,vects)
}
######################
allrast_ST =vector()
ms=ST_mapsets[1]
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allreast_ST <- c(allrast_ST,vects)
}
allrast_ST =vector()
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allreast_ST <- c(allrast_ST,vects)
}
allrast_ST =vector()
ms=ST_mapsets[1]
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
#########################################################################
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
EPPAN_mapsets= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_EPPAN <- c(allrast_ST,vects)
}
allrast_ST =vector()
ms=ST_mapsets[1]
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_EPPAN <- c(allrast_ST,vects)
}
location="EPPAN_vhr"
mapset="PERMANENT"
ST = "SUEDTIROL_DTM_NEU"
ST_mapsets= list.dirs(paste(gisDbase,"/",ST,sep=""),recursive = F,full.names = F)
EPPAN_mapsets= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
allrast_ST =vector()
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_EPPAN <- c(allrast_ST,vects)
}
allrast_EPPAN
allrast_ST
location="EPPAN_vhr"
location="EPPAN_vhr"
mapset="PERMANENT"
ST = "SUEDTIROL_DTM_NEU"
ST_mapsets= list.dirs(paste(gisDbase,"/",ST,sep=""),recursive = F,full.names = F)
EPPAN_mapsets= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
allrast_ST =vector()
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_EPPAN <- c(allrast_ST,vects)
}
predictors <- c()
gisBase="/usr/local/src/grass70_release/dist.x86_64-unknown-linux-gnu"
gisDbase =  "/media/fabs/Volume/Data/GRASSDATA/"
location="EPPAN_vhr"
mapset="PERMANENT"
ST = "SUEDTIROL_DTM_NEU"
ST_mapsets= list.dirs(paste(gisDbase,"/",ST,sep=""),recursive = F,full.names = F)
EPPAN_mapsets= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
allrast_ST =vector()
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_EPPAN <- c(allrast_EPPAN,vects)
}
##################################
require(e1071)
require(rgdal)
require(rgrass7)
#proj3path="/home/fabs/PROJECTP3"
proj3path="/media/fabs/Volume/01_PAPERZEUG/PROJECTP3/"
setwd(proj3path)
load('./data/dependentlists.RData')
load(file="./data/modeldata/predictorlists_SVM_localandgeomtop2.RData")
dependent=dependentlist[1]
predictors <- c()
gisBase="/usr/local/src/grass70_release/dist.x86_64-unknown-linux-gnu"
gisDbase =  "/media/fabs/Volume/Data/GRASSDATA/"
location="EPPAN_vhr"
mapset="PERMANENT"
ST = "SUEDTIROL_DTM_NEU"
ST_mapsets= list.dirs(paste(gisDbase,"/",ST,sep=""),recursive = F,full.names = F)
EPPAN_mapsets= list.dirs(paste(gisDbase,"/",location,sep=""),recursive = F,full.names = F)
allrast_ST =vector()
for(ms in ST_mapsets){
vects <- list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
allrast_ST <- c(allrast_ST,vects)
}
allrast_EPPAN = vector()
for(ms in EPPAN_mapsets){
vects <- list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
allrast_EPPAN <- c(allrast_EPPAN,vects)
}
locationpreds = vector()
for (i in fullpredlist){
if(i %in% allrast_EPPAN){
EPPANpreds <- c(EPPANpreds,i)
}
}
EPPANpreds = vector()
for (i in fullpredlist){
if(i %in% allrast_EPPAN){
EPPANpreds <- c(EPPANpreds,i)
}
}
fullpredlist
EPPANpreds = vector()
for (i in allrast_EPPAN){
ifelse(i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}
}
EPPANpreds = vector()
for (i in allrast_EPPAN){
if (i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}
}
EPPANpreds
unique(EPPANpreds)
EPPANpreds <- unique(EPPANpreds)
unique(fullpredlist)
STpreds <- fullpredlist[!(fullpredlist %in% EPPANpreds)]
STpreds
EPPANpreds = vector()
ST_preds = vector()
for (i in allrast_EPPAN){ # check which predictors are in the location EPPAN_VHR and which have a double "hr" in the name
if (i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
} else {
ST_preds <- c(ST_preds,i)
}
}
EPPANpreds = vector()
ST_preds = vector()
for (i in allrast_EPPAN){ # check which predictors are in the location EPPAN_VHR and which have a double "hr" in the name
if (i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
} else if (i %in% fullpredlist){
ST_preds <- c(ST_preds,i)
}
}
EPPANpreds = vector()
ST_preds = vector()
for (i in allrast_EPPAN){ # check which predictors are in the location EPPAN_VHR and which have a double "hr" in the name
if (i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}
}
ST_preds <- allrast_ST[allrast_ST %in% fullpredlist]
EPPANpreds <- unique(EPPANpreds)
EPPANpreds
ST_preds
rest =fullpredset[!(fullpredset %in% EPPANpreds) && !(fullpredset %in% ST_preds) ]
rest =fullpredlist[!(fullpredlist %in% EPPANpreds) && !(fullpredlist %in% ST_preds) ]
rest =fullpredlist[!(fullpredlist %in% EPPANpreds) || !(fullpredlist %in% ST_preds) ]
rest =fullpredlist[!(fullpredlist %in% EPPANpreds || fullpredlist %in% ST_preds) ]
rest =fullpredlist[!(fullpredlist %in% c(EPPANpreds,ST_preds))]
EPPANpreds
unique(ST_preds)
ST_preds <- unique(ST_preds)
EPPANpreds <- unique(EPPANpreds)
rest =fullpredlist[!(fullpredlist %in% c(EPPANpreds,ST_preds))]
length(ST_preds,EPPANpreds,rest)
length(c(ST_preds,EPPANpreds,rest))
unique(rest)
hr_hr _ vector()
hr_hr =vector()
EPPANpreds = vector()
ST_preds = vector()
hr_hr =vector()
for (i in allrast_EPPAN){ # check which predictors are in the location EPPAN_VHR and which have a double "hr" in the name
if (i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
hr_hr <- c(hr_hr,paste(i,"_hr",sep=""))
}
}
ST_preds <- allrast_ST[allrast_ST %in% fullpredlist]
ST_preds <- unique(ST_preds)
EPPANpreds <- unique(EPPANpreds)
hr_hr
hr_hr <- unique(hr_hr)
EPPANpreds = vector()
ST_preds = vector()
hr_hr =vector()
for (i in allrast_EPPAN){ # check which predictors are in the location EPPAN_VHR and which have a double "hr" in the name
if (i %in% fullpredlist){
EPPANpreds <- c(EPPANpreds,i)
}else if (paste(i,"_hr",sep="") %in% fullpredlist){
hr_hr <- c(hr_hr,paste(i,"_hr",sep=""))
}
}
ST_preds <- allrast_ST[allrast_ST %in% fullpredlist]
ST_preds <- unique(ST_preds)
EPPANpreds <- unique(EPPANpreds)
hr_hr <- unique(hr_hr)
rest =fullpredlist[!(fullpredlist %in% c(EPPANpreds,ST_preds,hr_hr))]
rest
fullpredlist
res10m_dtm <- c( "minic_ws3","slope_ws11","profc_ws15",  "maxic_ws15", "GeneralCurvature","minic_ws11", "crosc_ws11", "longc_ws15",
"MinimalCurvature",  "profc_ws11", "profc_ws5",  "minic_ws15", "crosc_ws5", "profc_ws3","LongitudinalCurvature",
"maxic_ws3", "maxic_ws7","MaximalCurvature","PlanCurvature", "slope_ws5" , "planc_ws11")
res50m_mitsaga <- c("slope_DTM_50m_avg_ws3","Slope","longc_DTM_50m_avg_ws11","slope_DTM_50m_avg_ws7","crosc_DTM_50m_avg_ws11",
"slope_DTM_50m_avg_ws5", "profc_DTM_50m_avg_ws7", "minic_DTM_50m_avg_ws3", "Flow_Line_Curvature",  "minic_DTM_50m_avg_ws5",
"minic_DTM_50m_avg_ws11", "planc_DTM_50m_avg_ws3", "Profile_Curvature", "Tangential_Curvature", "longc_DTM_50m_avg_ws3",
"longc_DTM_50m_avg_ws7",  "planc_DTM_50m_avg_ws11", "Convexity", "General_Curvature")
predsgeom <- c("geom_dtm_10m_hyd_fl5_L10","geom_10m_fl3_L3" ,"geom_10m_fl4_L10","geom_10m_fl4_L9","geom_10m_fl8_L16","geom_10m_fl10_L70",
"geom_10m_fl10_L17","geom_10m_fl10_L6","geom_10m_fl8_L7", "geom_10m_fl10_L10" , "geom_10m_fl10_L27" ,"geom_10m_fl8_L11",
"geom_10m_fl10_L5","geom_dtm_10m_hyd_fl5_L5","geom_10m_fl10_L7","geom_10m_fl8_L50" ,"geom_10m_fl8_L9","geom_10m_fl1_L100",
"geom_10m_fl1_L10" ,"geom_10m_fl8_L28","geom_10m_fl10_L3" )
dtm_hr <- c("minic_ws9_hr","Total_Curvature_hr","Longitudinal_Curvature_hr" ,"crosc_ws11_hr", "crosc_ws3_hr","minic_ws7_hr","CrossSectionalCurvature_hr",
"Slope_hr","slope_ws15_hr","dtm_hr_CONVEX_r30","slope_ws3_hr", "slope_ws13_hr","slope_ws19_hr","crosc_ws19_hr",
"Flow_Line_Curvature","maxic_ws3_hr","crosc_ws23_hr","planc_ws29_hr", "minic_ws3_hr",  "maxic_ws5_hr",  "minic_ws23_hr",
"profc_ws3_hr","maxic_ws19_hr", "longc_ws23_hr","minic_ws15_hr", "minic_ws19_hr","minic_ws5_hr","slope_ws5_hr",
"crosc_ws5_hr","profc_ws29_hr", "minic_ws11_hr", "slope_ws11_hr", "Plan_Curvature_hr", "maxic_ws11_hr",
"planc_ws11_hr","crosc_ws29_hr","planc_ws5_hr","planc_ws23_hr")
allpredictors <- c(res10m_dtm,res50m_mitsaga,predsgeom,dtm_hr)
predictors <- c("geom_10m_fl4_L10","slope_DTM_50m_avg_ws7_50m")
initGRASS(gisBase = gisBase,gisDbase = gisDbase,location=location,mapset=mapset,override = TRUE)
execGRASS("g.mapset",flags=c("c"), mapset=paste("predict_",dependent,sep="") )
region <- execGRASS("g.region")
region <- execGRASS("g.region" -m)
region <- execGRASS("g.region" ,flags=c("m"))
region
paste(p," = ",p)
p=predictors[1]
paste(p," = ",p)
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in ST_mapsets){
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste(p," = ",p))
} else {
for (ms in ST_mapsets){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))
}
}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in ST_mapsets){
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste(p," = ",p))
} else {
for (ms in ST_mapsets){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))
}
}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in ST_mapsets){
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste(p," = ",p))
} else {
for (ms in ST_mapsets){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))
}
}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in ST_mapsets){
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste(p," = ",p))}
}else {
for (ms in ST_mapsets){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in ST_mapsets){
try(execGRASS("r.proj",location=ST,mapset=ms,input=p))
try(execGRASS("r.mapcalc", paste(p," = ",p)))}
}else {
for (ms in ST_mapsets){
try(execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep="")))}
}
}
paste(p,"\' = \'",p)
predictorss
predictors
p=predictors[1]
p %in% c(res10m_dtm,predsgeom,res50m_mitsaga))
p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)
for (ms in ST_mapsets){
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste("\'",p," = ",p,"\'"))}
ST_mapsets
rasts <- execGRASS("g.list",type="rast",mapset=ms)
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
rasts
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste("\'",p," = ",p,"\'"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
ST_mapsets
ST_mapsets= list.dirs(paste(gisDbase,"/",ST,sep=""),recursive = F,full.names = F)            #
ST_mapsets
pot_ST <- ST_mapsets[c(10:19)]
EPPAN_mapsets
pot_EPPAN <- EPPAN_mapsets[c(4:10)]
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", paste("\'",p," = ",p,"\'"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
paste("\'",p," = ",p,"\'")
execGRASS("r.mapcalc", expressio= paste("\'",p," = ",p,"\'"))        }}
execGRASS("r.mapcalc", expressio= paste("\'",p," = ",p,"\'"))
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", expression= paste("\'",p," = ",p,"\'"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", expression= paste("\'",p," = ",p,"\'"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", expression= paste(p," = ",p))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", expression= paste(p," = ",p),flags=c("o"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", expression= paste(p," = ",p),flags=c("overwrite"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
predictors
p=predictors[2]
p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)
res50m_mitsaga
predictors <- c("geom_10m_fl4_L10","slope_DTM_50m_avg_ws7")
for (p in predictors){
if (p %in% c(res10m_dtm,predsgeom,res50m_mitsaga)){
for (ms in pot_ST){
rasts <-  list.files(paste(gisDbase,"/",ST,"/",ms,"/",'cats',sep=""))
if (p %in% rasts) {
execGRASS("r.proj",location=ST,mapset=ms,input=p)
execGRASS("r.mapcalc", expression= paste(p," = ",p),flags=c("overwrite"))        }}
}else {
for (ms in ST_mapsets){
rasts <-  list.files(paste(gisDbase,"/",location,"/",ms,"/",'cats',sep=""))
if(p %in% rasts){
execGRASS("g.copy",raster=paste(p,"@",ms,",",p,sep=""))}}
}
}
